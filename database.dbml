Table users as U {
  id bigint [pk, increment] // auto-increment
  slug string
  name string
  email string
  email_verified_at timestamp [null]
  is_active boolean [default: 1]
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Table roles {
  id bigint [pk, increment]
  company_id bigint
  name string
}

Ref: roles.company_id > companies.id

Table permissions {
  id bigint [pk, increment]
  name string
}

Table role_has_permission {
  role_id bigint
  permission_id bigint
}

Ref: role_has_permission.role_id > roles.id
Ref: role_has_permission.permission_id > permissions.id

Table user_has_role {
  user_id bigint
  role_id bigint
}

Ref: user_has_role.user_id - users.id
Ref: user_has_role.role_id - roles.id

Table teams {
  id bigint [pk, increment]
  name string
}

Table team_has_role {
  team_id bigint
  role_id bigint
}

Ref: teams.id - team_has_role.team_id
Ref: roles.id - team_has_role.role_id

Table companies {
  id bigint [pk, increment]
  user_id bigint
  name string
  slug string [unique]
  icon_path text [null]
  logo_path text [null]
  vat_number string [null]
  phone_number string
  province string
  city string
  district string
  sub_district string
  zip_code integer
  address text
  company_information string [null]
  is_active boolean [default: 1]
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
 }
 
 Ref: companies.user_id - users.id
 
 Table company_settings {
   id bigint [pk, increment]
   company_id bigint
   currency string [default: "IDR"]
   ccy_symbol string [default: "Rp"]
   ccy_symbol_Plcmt symbol_Plcmt [default: "before amount"]
   date_format date_format [default: "dd/mm/yy"]
   time_format time_format [default: "24 Hour"]
   time_zone string [default: "Asia/Jakarta"]
   trx_editable_type trx_editable_type [default: "by status"]
   trx_editable_by_days integer [default: 7]
   trx_editable_by_status string [default: "completed"]
   item_sku_prefix string [null]
   item_default_unit_id bigint
   invoice_format json [null]
   bill_format json [null]
   payment_format json [null]
   def_acc_sale_id bigint
   def_acc_purch_id bigint
   created_at timestamp
   updated_at timestamp
   deleted_at timestamp
 }
 
 Enum cur_symbol_placement {
   "before amount"
   "after amunt"
 }
 
 Enum date_format {
   "mm/dd/yy"
   "dd/mm/yy"
   "mm-dd-yy"
   "dd-mm-yy"
 }
 
 Enum time_format {
   "24 hour"
   "12 hour"
 }
 
 Enum trx_editable_type {
   "by days"
   "by status"
 }
 
 Ref: company_settings.company_id - companies.id
 Ref: accounts.id < company_settings.def_acc_purch_id
 Ref: accounts.id < company_settings.def_acc_sale_id
 
 Table contacts {
   id bigint [pk, increment]
   user_id bigint
   group_id  bigint
   company_id bigint
   is_can_login boolean [default: 0]
   is_active boolean [default: 1]
   is_verified boolean [default: 0]
   contact_type contact_type [default: "customer"]
   is_individual boolean [default:1]
   name string 
   phone_number string
   email string [null]
   province string
   city string
   district string
   sub_district string
   zip_code integer
   address text
   created_at timestamp
   updated_at timestamp
   deleted_at timestamp
 }
 
 Enum contact_type {
  supplier
  customer
  partner
 }
 
 Ref: companies.id < contacts.company_id
 Ref: contacts.user_id < users.id
 Ref: contacts.group_id > contact_groups.id
 
 Table contact_groups {
   id bigint [pk, increment]
   company_id bigint
   selling_price_group bigint
   name string
   description text
   created_at timestamp
   updated_at timestamp
   deleted_at timestamp
 }
 
 Ref: companies.id < contact_groups.company_id
 
 Table balances {
   id bigint
   contact_id bigint [ref: - contacts.id]
   amount bigint
 }
 
 Table balance_histories {
   id bigint
   balance_id bigint [ref: > balances.id]
   note string
   amount bigint
 }
 
 Table item_waranties {
   id bigint [pk, increment]
   company_id bigint
   name string
   description text
   duration integer [default: 1]
   duration_type duration_type [default: "months"]
   created_at timestamp
   updated_at timestamp
   deleted_at timestamp
 }
 
 Enum duration_type {
   days
   months
   years
 }
 
  Ref: companies.id < item_waranties.company_id
 
 Table item_unit {
   id bigint [pk, increment]
   company_id bigint
   name string
   short_name string
   is_decimal boolean [default: 0]
   created_at timestamp
   updated_at timestamp
   deleted_at timestamp
 }
 
  Ref: companies.id < item_unit.company_id

Table item_category {
  id bigint [pk, increment]
  company_id bigint
  meta_tags json
  slug string [unique]
  name string
  image_path text [null]
  category_code string [null]
  description text [null]
  parent bigint [default: 0]
}

 Ref: companies.id < item_category.company_id
 Ref: item_category.parent > item_category.id

Table item_brand {
  id bigint [pk, increment]
  company_id bigint
  meta_tags json
  slug string [unique]
  name string
  image_path text [null]
  description text[null]
}

 Ref: companies.id < item_brand.company_id

Table items {
  id bigint [pk, increment]
  company_id bigint
  item_brand_id bigint
  item_category_id bigint
  item_sub_category_id bigint
  item_waranties_id bigint
  meta_tags json
  slug string [unique]
  name string
  variant_combination json [note: "Ex. Color: Red, Size: L"]
  description text 
  short_description string [null]
  weight decimal [null]
  is_active boolean [default: 1]
  is_managed_stock boolean [default: 0]
  image_path text [null]
  brochure_path text [null]
  item_type item_type [default: "single", note: "Jika memilih tipe package maka akan memliki relasi dengan item_package_details"]
  tags json
  parent bigint [default: 0]
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Enum item_type {
  service
  single
  variable
  package
}

 Ref: items.company_id > companies.id
 Ref: items.item_brand_id > item_brand.id
 Ref: items.item_category_id > item_category.id
 Ref: items.item_sub_category_id > item_category.id
 Ref: items.item_waranties_id > item_waranties.id
 Ref: items.id < items.parent

 Table item_has_variant {
   id bigint [pk, increment]
   item_id bigint
   variant_id bigint
   possible_value json
 }
 
 Ref: items.id < item_has_variant.item_id
 Ref: product_variant.id < item_has_variant.variant_id

Table product_variant {
  id bigint [pk, increment]
  name string
  possible_value json
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}


Table item_package_details {
  item_id_package bigint
  item_id bigint
  created_at timestamp
  updated_at timestamp
} 
 
  Ref: items.id < item_package_details.item_id_package
  Ref: items.id < item_package_details.item_id
 
Table item_selling_price_group {
  id bigint [pk, increment]
  company_id bigint
  name string
  description string
  is_active boolean [default: 1]
  created_at timestamp
  deleted_at timestamp
  updated_at timestamp
}

 Ref: item_selling_price_group.company_id > companies.id

Table item_pricings {
  id bigint [pk, increment]
  item_id bigint
  price integer
  group_price json  [note: "group_price_id => group_price, 1 => 20000"]
  default_tax_id bigint [default: 0]
  selling_account_id bigint [note: "default sesuai dengan company_setting"]
  purchase_account_id bigint [note: "default sesuai dengan company_setting"]
  created_at timestamp
  deleted_at timestamp
  updated_at timestamp
}

 Ref: items.id < item_pricings.item_id
 Ref: accounts.id < item_pricings.selling_account_id
 Ref: accounts.id < item_pricings.purchase_account_id

Table warehouses {
  id bigint [pk, increment]
  company_id bigint
  parent bigint [default: 0]
  name string
  address text
  description text [null]
  phone_number string
  email string [null]
  is_active boolean [default: 1]
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

 Ref: companies.id < warehouses.company_id
 Ref: warehouses.id < warehouses.parent
 
 Table inventories {
   id bigint [pk, increment]
   company_id bigint
   item_id bigint
   warehouse_id bigint
   item_unit bigint
   sku string [null]
   barcode string [null]
   stock integer
   cost integer [null]
   contact_id bigint [null, note: "supplier"]
   security_stock integer [default: 20]
   created_at timestamp
   updated_at timestamp
   deleted_at timestamp
 }

 Ref: companies.id < inventories.company_id
 Ref: item_unit.id - inventories.item_unit
 Ref: items.id < inventories.item_id
 Ref: warehouses.id < inventories.warehouse_id
 Ref: contacts.id < inventories.contact_id

Table inventory_histories {
  id bigint [pk, increment]
  inventory_id bigint
  item_id bigint
  order_id string
  quantity integer
  note string
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Ref: inventories.id < inventory_histories.inventory_id
Ref: items.id < inventory_histories.item_id

Table item_unit_convert_details {
  id bigint [pk, increment]
  item_id bigint
  default_item_unit_id bigint
  conversion_value integer
  to_item_unit_id bigint
  price json
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

 Ref: items.id < item_unit_convert_details.item_id
 Ref: item_unit.id < item_unit_convert_details.default_item_unit_id
 Ref: companies.id < item_unit_convert_details.to_item_unit_id
 
 Table taxes {
   id bigint [pk, increment]
   company_id bigint
   name string
   rate integer
   created_at timestamp
   updated_at timestamp
   deleted_at timestamp
 }
 
 Ref: companies.id < taxes.company_id

Table orders {
  id bigint [pk, increment]
  company_id bigint
  order_type order_type [default: "selling"]
  order_id string [note: "sesuai dengan company_settings"]
  user_id bigint
  contact_id bigint
  logistic_id bigint
  logistic_service_id bigint
  warehouse_id bigint
  discount_amount integer [null]
  is_repeat_order boolean [default: 0]
  receipt string [null]
  shipping_fee integer [default: 0]
  shipping_address json [note: "province, city, district, sub_district, zip_code"]
  cod_fee integer [default: 0]
  status order_status [default: "order placed"]
  message_for_packer text [null]
  message_for_logistic text [null]
  qty_amount integer
  weight decimal
  amount integer
  order_note text [null]
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Enum order_type {
  "selling"
  "purchase"
}

Enum order_status {
  "order placed"
  "packed"
  "shipping"
  "awaiting receipt"
  "delivered"
  "awaiting payment"
  "completed"
  "cancelled"
  "declined"
  "refunded"
  "returns"
}

Ref: companies.id < orders.company_id
Ref: contacts.id < orders.contact_id
Ref: users.id < orders.user_id
Ref: logistics.id < orders.logistic_id
Ref: logistic_services.id < orders.logistic_service_id
Ref: warehouses.id < orders.warehouse_id

Table order_has_discount {
  id bigint
  order_id bigint
  discount_id bigint
  rate integer [default: 0]
  amount integer [default: 0]
}

Ref: orders.id < order_has_discount.order_id
Ref: discounts.id < order_has_discount.discount_id

Table order_has_taxes {
  id bigint
  order_id bigint
  tax_id bigint
  rate integer
  amount integer
}

Ref: orders.id < order_has_taxes.order_id
Ref: taxes.id < order_has_taxes.tax_id

Table discounts {
  id bigint [pk, increment]
  company_id bigint
  name string [null]
  code string [null]
  discount_type discount_type [default: "coupon code"]
  is_unlimited boolean [default: 1]
  discount_limit integer [null]
  coupon_type coupon_type [default: "flat"]
  discount_fee integer [null]
  start_date timestamp
  end_date timestamp
  is_never_expired boolean [default: 0]
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Enum discount_type {
  "coupon code"
  "promotion"
}

Enum coupon_type {
  "flat"
  "percentage"
  "free shipping"
  "same price"
}

Ref: companies.id < discounts.company_id

Table order_details {
  id bigint [pk, increment]
  order_id bigint
  item_id bigint
  item_unit_id bigint
  item_note string [null]
  cust_rate integer [note: "harga barang satuan sesuai unit"]
  partner_rate integer [note: "harga barang satuan sesuai unit"]
  quantity integer
  weight decimal
  cust_amount integer
  partner_amount integer
  tax_id bigint
  tax_amount integer
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Ref: orders.id < order_details.order_id
Ref: items.id < order_details.item_id
Ref: item_unit.id < order_details.item_unit_id
Ref: taxes.id < order_details.tax_id

Table logistics {
  id bigint [pk, increment]
  company_id bigint
  name string
  code string
  image_path text
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Ref: companies.id < logistics.company_id

Table logistic_services {
  id bigint [pk, increment]
  logistic_id bigint
  name string
  is_req_receipt boolean [default: 0]
  cod_fee integer
  discount_fee integer
  returns_fee_formula text
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Ref: logistics.id < logistic_services.logistic_id

Table invoices {
  id bigint [pk, increment]
  company_id bigint
  invoice_number string [note: "sesuai dengan company_settings"]
  order_id bigint
  cust_contact_id bigint
  cust_payment_method payment_method [default: "transfer"]
  cust_payment_status payment_status [default: "unpaid"]
  cust_terms_type terms_type
  cust_terms integer [default: 3]
  partner_payment_method payment_method [default: "transfer"]
  partner_payment_status payment_status [default: "unpaid"]
  partner_contact_id bigint
  partner_terms_type terms_type
  partner_terms integer [default: 3]
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Enum terms_type {
  "days"
  "days after status is completed"
}

Enum payment_method {
  cod
  marketplace
  transfer
}

Enum payment_status {
  unpaid
  partially
  paid
}

Ref: invoices.order_id - orders.id
Ref: invoices.company_id > companies.id
Ref: contacts.id < invoices.cust_contact_id
Ref: contacts.id < invoices.partner_contact_id

Table bills {
  id bigint [pk, increment]
  company_id bigint
  bill_number string [note: "sesuai dengan company_settings"]
  order_id bigint
  payement_method payment_method [default: "transfer"]
  payment_status payment_status [default: "unpaid"]
  terms_type terms_type
  terms integer [default: 3]
  contact_id bigint [note: "contact status supplier"]
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Ref: bills.order_id - orders.id
Ref: bills.company_id > companies.id
Ref: bills.contact_id > contacts.id

Table payment_histories {
  id bigint [pk, increment]
  number string [note: "Invoice / Bill Number"]
  from_account_id bigint [null]
  to_account_id bigint
  user_id bigint
  amount integer
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Ref: payment_histories.number > invoices.invoice_number
Ref: payment_histories.number > bills.bill_number
Ref: payment_histories.from_account_id > accounts.id
Ref: payment_histories.to_account_id > accounts.id
Ref: payment_histories.user_id > users.id

Table accounts {
  id bigint [pk, increment]
  company_id bigint
  parent bigint [default: 0]
  account_root account_root
  is_group boolean [default: 0]
  name string
  account_type_id bigint
  balance bigint [null]
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Enum account_root {
  "Assets"
  "Expenses"
  "Income"
  "Liabilities"
}

Ref: accounts.id < accounts.parent
Ref: companies.id < accounts.company_id
Ref: accounts.account_type_id > account_type.id

Table account_type {
  id bigint [pk, increment]
  company_id bigint
  name string [note: "Accumulated Depreciation, Bank, Cash, Chargeable,
  Cost of Goods Sold, Depreciation, Equity, Expense Account, 
  Expenses Included In Valuation, Fixed Asset, Income Account, Payable, Receivable,
  Round Off, Stock, Stock Adjustment, Stock Received But Not Billed, Tax, Temporary"]
  type boolean [note: "plus or minus"]
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Ref: companies.id < account_type.company_id

Table attachment {
  id bigint [pk, increment]
  company_id bigint
  model string
  model_id bigint
  location text
  name string
  size integer
  created_at timestamp
  updated_at timestamp
  deleted_at timestamp
}

Ref: orders.id < attachment.model_id
Ref: bills.id < attachment.model_id
Ref: companies.id < attachment.company_id

Table company_selling {
  company_id bigint [ref: > companies.id]
  order_id bigint [ref: - orders.id ]
}

Table company_purchasing {
  company_id bigint [ref: > companies.id]
  order_id bigint [ref: - orders.id]
}
